BEGIN
DROP FUNCTION IF EXISTS "findUser"(int)
DROP FUNCTION IF EXISTS get_users()
DROP TABLE IF EXISTS audit
DROP TABLE IF EXISTS person
DROP TABLE IF EXISTS users
DROP TABLE IF EXISTS images
CREATE TABLE audit(id serial, event text, created timestamptz, ref int)
CREATE TABLE person(id serial, name text, dob date)
CREATE TABLE users(id serial, login text, active boolean)
CREATE TABLE images(id serial, name text, data bytea)
INSERT INTO users(login, active) VALUES('user-1', true)
INSERT INTO users(login, active) VALUES('user-2', true)
INSERT INTO users(login, active) VALUES('user-3', false)
INSERT INTO users(login, active) VALUES('user-4', false)
INSERT INTO person(name, dob) VALUES('David', '1995-09-07T00:00:00.000+01:00')
INSERT INTO person(name, dob) VALUES('John', '1980-04-20T00:00:00.000+01:00')
INSERT INTO person(name, dob) VALUES('Mark', '1973-06-12T00:00:00.000+01:00')
INSERT INTO person(name, dob) VALUES('Peter', '1992-12-03T00:00:00.000+00:00')
CREATE OR REPLACE FUNCTION "findUser"(userId int) RETURNS SETOF users AS $$ SELECT * FROM users WHERE id = userId $$ language 'sql'
CREATE OR REPLACE FUNCTION get_users() RETURNS SETOF users AS $$ SELECT * FROM users $$ language 'sql'
CREATE OR REPLACE PROCEDURE empty_proc() LANGUAGE SQL AS $$ $$;
CREATE OR REPLACE PROCEDURE output_proc(INOUT output1 boolean, INOUT output2 text)
                            LANGUAGE plpgsql AS $$
                            BEGIN
                                output1 := true;
                                output2 := concat(output2, '-hello!');
                            END;$$;
COMMIT
*** SUCCESS ***
